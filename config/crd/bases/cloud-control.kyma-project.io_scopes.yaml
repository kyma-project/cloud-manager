---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: scopes.cloud-control.kyma-project.io
spec:
  group: cloud-control.kyma-project.io
  names:
    kind: Scope
    listKind: ScopeList
    plural: scopes
    singular: scope
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.kymaName
      name: Kyma
      type: string
    - jsonPath: .spec.shootName
      name: Shoot
      type: string
    - jsonPath: .spec.provider
      name: Provider
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Scope is the Schema for the scopes API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ScopeSpec defines the desired state of Scope
            properties:
              kymaName:
                type: string
              provider:
                type: string
              region:
                type: string
              scope:
                maxProperties: 1
                minProperties: 1
                properties:
                  aws:
                    properties:
                      accountId:
                        type: string
                      network:
                        properties:
                          nodes:
                            type: string
                          pods:
                            type: string
                          services:
                            type: string
                          vpc:
                            properties:
                              cidr:
                                type: string
                              id:
                                type: string
                            type: object
                          zones:
                            items:
                              properties:
                                internal:
                                  type: string
                                name:
                                  type: string
                                public:
                                  type: string
                                workers:
                                  type: string
                              required:
                              - internal
                              - name
                              - public
                              - workers
                              type: object
                            type: array
                        required:
                        - vpc
                        - zones
                        type: object
                      vpcNetwork:
                        type: string
                    required:
                    - accountId
                    - network
                    - vpcNetwork
                    type: object
                  azure:
                    properties:
                      network:
                        properties:
                          cidr:
                            type: string
                          nodes:
                            type: string
                          pods:
                            type: string
                          services:
                            type: string
                          zones:
                            items:
                              properties:
                                cidr:
                                  type: string
                                name:
                                  type: string
                              type: object
                            type: array
                        type: object
                      subscriptionId:
                        type: string
                      tenantId:
                        type: string
                      vpcNetwork:
                        type: string
                    required:
                    - network
                    - subscriptionId
                    - tenantId
                    - vpcNetwork
                    type: object
                  gcp:
                    properties:
                      network:
                        properties:
                          nodes:
                            type: string
                          pods:
                            type: string
                          services:
                            type: string
                        type: object
                      project:
                        type: string
                      vpcNetwork:
                        type: string
                      workers:
                        items:
                          properties:
                            zones:
                              items:
                                type: string
                              type: array
                          required:
                          - zones
                          type: object
                        type: array
                    required:
                    - project
                    - vpcNetwork
                    type: object
                  openstack:
                    properties:
                      domainName:
                        type: string
                      network:
                        properties:
                          nodes:
                            type: string
                          pods:
                            type: string
                          services:
                            type: string
                          zones:
                            items:
                              type: string
                            type: array
                        type: object
                      tenantName:
                        type: string
                      vpcNetwork:
                        type: string
                    required:
                    - domainName
                    - network
                    - tenantName
                    - vpcNetwork
                    type: object
                type: object
              shootName:
                type: string
            required:
            - kymaName
            - provider
            - region
            - scope
            - shootName
            type: object
          status:
            description: ScopeStatus defines the observed state of Scope
            properties:
              conditions:
                description: List of status conditions to indicate the status of a
                  Peering.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              gcpOperations:
                description: Operation Identifier to track the ServiceUsage Operation
                items:
                  type: string
                type: array
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
