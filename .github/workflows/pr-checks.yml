name: PR Checks
run-name: >-
  ${{ github.event.pull_request.number || github.ref_name }}
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
env:
  PIPELINE: true
jobs:
  build:
    strategy:
      matrix:
        include:
          - nukeBackupsGcp: "false"
            nukeBackupsAws: "false"
            nukeBackupsAzure: "false"
            nfs41Gcp: "false"
            vpcPeeringSync: "false"
            name: Build & Test
          - nukeBackupsGcp: "true"
            nukeBackupsAws: "true"
            nukeBackupsAzure: "true"
            nfs41Gcp: "true"
            vpcPeeringSync: "true"
            name: Build & Test (Nuke Backups, NFSv4.1, Peering Sync)
    runs-on: ubuntu-latest
    name: ${{ matrix.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Display Go version
        run: go version
      - name: Build and test
        env:
          FF_NUKE_BACKUPS_GCP: ${{ matrix.nukeBackupsGcp }}
          FF_NUKE_BACKUPS_AWS: ${{ matrix.nukeBackupsAws }}
          FF_NUKE_BACKUPS_AZURE: ${{ matrix.nukeBackupsAzure }}
          FF_NFS41_GCP: ${{ matrix.nfs41Gcp }}
          FF_VPC_PEERING_SYNC: ${{ matrix.vpcPeeringSync }}
        run: |
          ./config/sync.sh
          go mod tidy
          go mod download
          make build
          make test
      - name: Check modified files
        run: git diff --exit-code
      - name: Check if test GUIDs are unique
        run: x=$(grep -rEho '[[:xdigit:]]{8}(-[[:xdigit:]]{4}){3}-[[:xdigit:]]{12}'  ./internal | sort | uniq -d); [ -z "${x}" ] || ( echo duplicated GUID detected $x; exit 1; )
